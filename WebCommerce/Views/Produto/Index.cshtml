@model PagedList.IPagedList<WebCommerce.Models.Classes.Produto>
    @using PagedList

@{
    ViewBag.Title = "Produtos";
}

<h2></h2>

@*slide show para imagens dos produtos*@
<div class="container">

    <div id="myCarousel" class="carousel slide" data-ride="carousel">
        <!-- indicadores -->
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="1"></li>
            <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol>

        <!-- imagens para o slides -->
        <div class="carousel-inner">
            <div class="item active">
                <img src="~/img/img1.jpg" alt="Produtos Informática" style="width:100%;">
            </div>

            <div class="item">
                <img src="~/img/img2.jpg" alt="Produtos Informática" style="width:100%;">
            </div>

            <div class="item">
                <img src="~/img/img3.jpg" alt="Produtos Informática" style="width:100%;">
            </div>
        </div>

        <!-- controles de esquerda e direita -->
        <a class="left carousel-control" href="#myCarousel" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
<br />

<div class="row">
    @*Formulario para pesquisar Produtos por nome*@
    <div class="col-md-3">
        Filtrar:
        @using (Ajax.BeginForm("Index", "Produto", new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "ListProduto" }))
        {
            @*a tag onfocus serve p quando o campo for clicado ele apagar todo o texto escrito nele*@
            <br />
            <input type="text" placeholder="Buscar por Produto" id="Pesquisa" onfocus="this.value='';" class="form-control" name="prod">
            <br />
            @*ver como passar o valor do dropdownlist para o metodo index*@
            @Html.DropDownList("Categorias", null, "Selecione uma Categoria", htmlAttributes: new { @class = "form-control", @placeholder = "Buscar por Categoria", @id = "PesquisaCat", @name = "cat" });
            @*<input type="text" placeholder="Buscar por Categoria" id="Pesquisaa" onfocus="this.value='';" class="form-control" name="cat">*@
            <br />
            <input type="submit" value="Pesquisar" class="btn btn-primary" />
        }
    </div>

    <div class="col-md-3">
        <p>@DateTime.Now.Day/@DateTime.Now.Month/@DateTime.Now.Year</p>
        <div id="relogio">
        </div>
    </div>

    <div class="col-md-3">
        @if (User.IsInRole("Admin"))
        {
            <p>@Html.ActionLink("Cadastar Produto", "Create", new { @class = "btn btn-success" })</p>
        }

    </div>

</div>

<hr />
<div class="row">
    @Html.Partial("_Produto", Model)
    
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
            {
                @:<<
                @Html.Raw(" ");
                @:< Anterior
            }

        @if (Model.HasNextPage)
            {
                @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                @Html.Raw(" ");
                @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            }
            else
            {
                @:Próxima >
                @Html.Raw(" ")
                @:>>
            }
    

    @*////////////////////////////////////////////////////////////*@

</div>




@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>



    <script>
        //script para auto completar as buscas na barra de pesquisa
        $(function () {
            $("#Pesquisa").autocomplete({
                source: "/Produto/BuscarProduto"
            });
        });

    </script>

    <script type="text/javascript">
        //script para mostrar um relogio
        function relogio() {
            var data = new Date();
            var horas = data.getHours();
            var minutos = data.getMinutes();
            var segundos = data.getSeconds();

            if (horas < 10) {
                horas = "0" + horas;
            }
            if (minutos < 10) {
                segundos = "0" + minutos;
            }
            if (segundos < 10) {
                segundos = "0" + segundos;
            }

            document.getElementById("relogio").innerHTML = horas + ":" + minutos + ":" + segundos;
        }
        window.setInterval("relogio()", 1000);
    </script>
}

<div>
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount

    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw(" ");
        @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Anterior
    }

    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @:Próxima >
        @Html.Raw(" ")
        @:>>
    }
</div>

<html>
<style>
    body{
        background-color:slategrey;
    }
</style>

</html>