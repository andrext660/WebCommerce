@model WebCommerce.Models.Classes.Endereco

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<!-- Adicionando JQuery -->
<script src="https://code.jquery.com/jquery-3.2.1.min.js"
        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous"></script>

<!-- Adicionando Javascript -->
<script type="text/javascript">

		$(document).ready(function () {

			function limpa_formulário_cep() {
				// Limpa valores do formulário de cep.
				$("#Rua").val("");
				$("#Bairro").val("");
				$("#Cidade").val("");
				$("#UF").val("");
			}

			//Quando o campo cep perde o foco.
			$("#CEP").blur(function () {

				//Nova variável "cep" somente com dígitos.
				var cep = $(this).val().replace(/\D/g, '');

				//Verifica se campo cep possui valor informado.
				if (cep != "") {

					//Expressão regular para validar o CEP.
					var validacep = /^[0-9]{8}$/;

					//Valida o formato do CEP.
					if (validacep.test(cep)) {

						//Preenche os campos com "..." enquanto consulta webservice.
						$("#Rua").val("...");
						$("#Bairro").val("...");
						$("#Cidade").val("...");
						$("#UF").val("...");

						//Consulta o webservice viacep.com.br/
						$.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

							if (!("erro" in dados)) {
								//Atualiza os campos com os valores da consulta.
								$("#Rua").val(dados.logradouro);
								$("#Bairro").val(dados.bairro);
								$("#Cidade").val(dados.localidade);
								$("#UF").val(dados.uf);
							} //end if.
							else {
								//CEP pesquisado não foi encontrado.
								limpa_formulário_cep();
								alert("CEP não encontrado.");
							}
						});
					} //end if.
					else {
						//cep é inválido.
						limpa_formulário_cep();
						alert("Formato de CEP inválido.");
					}
				} //end if.
				else {
					//cep sem valor, limpa formulário.
					limpa_formulário_cep();
				}
			});
		});

</script>

<div class="form-horizontal">
    <h4>Endereco</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
		</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
		</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
		</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
		</div>
    </div>

    <div class="form-group">
        @Html.Label("Estado", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
		</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
